/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Libaryproject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Subhojit
 */
public class Students extends javax.swing.JFrame {

    public String s_id,s_name;
    
    public Students() {
        initComponents();
        this.showAvailableBooks();
        this.showRentedBooks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btn_rentBook = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rentedBookTable = new javax.swing.JTable();
        btn_returnBook = new javax.swing.JButton();
        btn_logOut = new javax.swing.JButton();
        lbl_sname = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(30, 10));
        setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Available Books In Libary");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book No", "Book Name", "Author Name", "Avilablity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        btn_rentBook.setText("Rent This  Book");
        btn_rentBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn_rentBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rentBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(btn_rentBook, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_rentBook, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Books Already Rented by You");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        rentedBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No", "Rented Books"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rentedBookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rentedBookTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(rentedBookTable);

        btn_returnBook.setText("Return Book");
        btn_returnBook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btn_returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_returnBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_returnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_returnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        btn_logOut.setText("Log Out");
        btn_logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logOutActionPerformed(evt);
            }
        });

        lbl_sname.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lbl_sname, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_logOut)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_logOut)
                    .addComponent(lbl_sname, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showAvailableBooks(){
       
        ArrayList<books> list=new ArrayList<>();
        /*
        the list array variable will hold all the value avilable in "Books" table.
        */
        try{
            Connection con=JavaConnect.ConnectDb();
            String query="Select * from Books";
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(query);
            books book;
            while(rs.next()){
                book=new books(rs.getString("b_name"),rs.getString("b_author"),rs.getInt("available"),rs.getInt("b_no"));
                list.add(book);
            }
            rs.close();
            st.close();
            con.close();
          }catch(SQLException e){
            JOptionPane.showMessageDialog(null,"Show available Books() "+e);
        }
        
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        for(int i=0; i<list.size(); i++){
            row[0]=list.get(i).getno();
            row[1]=list.get(i).getname();
            row[2]=list.get(i).getauthor();
            row[3]=list.get(i).getavl();
            model.addRow(row);
        }
    }
    
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked

    }//GEN-LAST:event_tableMouseClicked

    private void btn_rentBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rentBookActionPerformed
        //Rent book button action performed
        int i = table.getSelectedRow();
        if(i<0){
            JOptionPane.showMessageDialog(null, "Select the book you wan to rent");
        }
        else{
        TableModel model = table.getModel();
        int avl=Integer.parseInt(model.getValueAt(i,3).toString());
        String bno=model.getValueAt(i, 0).toString();
        try{
        if(!this.bookAlreadyExist(bno)){
            if(avl != 0){
            String q="INSERT into rentedBooks VALUES(?,?)";
            try(Connection con =JavaConnect.ConnectDb();
            PreparedStatement pst = con.prepareStatement(q);
                    ){
            pst.setString(1, bno); 
            pst.setString(2,s_id);
            pst.executeUpdate();
            pst.close();
            //JOptionPane.showMessageDialog(null, "Book and student id inserted into rentedBooks");
            //decrease the avilablity of book by 1
            int avl2=Integer.parseInt(model.getValueAt(i, 3).toString());
            avl2-=1;
            String q2="UPDATE books set available ="+avl2+
                    " where b_no="+bno;
            PreparedStatement pst2=con.prepareStatement(q2);
            pst2.executeUpdate();
            pst2.close();
            }
            }else if(avl==0){
            JOptionPane.showMessageDialog(null, "This book is not available currently.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Book already rented by you.");
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in rent Book acton performed. " +e);
        }
        this.showAvailableBooks();
        this.showRentedBooks();
        }
        //JOptionPane.showMessageDialog(null, "Return book action performed tabe updated.");
    }//GEN-LAST:event_btn_rentBookActionPerformed

    private boolean bookAlreadyExist(String bno) {
           try{
        String q="Select * from rentedBooks rb join Books b on(rb.b_no=b.b_no)"
                + "join Students s on(s.Id = rb.Id)"
                + "where rb.b_no ="+bno+" and s.Id="+s_id;
               try (Connection con = JavaConnect.ConnectDb(); 
                    PreparedStatement pst = con.prepareStatement(q)
                       ) {
                   ResultSet rs= pst.executeQuery();
                   if(rs.next()){
                       rs.close();
                       pst.close();
                       con.close();
                       return true;
                   }
                   else{
                       rs.close();
                       pst.close();
                       return false;
                   }
               }
           }catch(SQLException e){
               JOptionPane.showMessageDialog(null, "Error in checking book exist "+e);
           }    
       return true;
    }
    
    private void btn_logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logOutActionPerformed
       //Log out button actionPerformed
        Login_Frame lf = new Login_Frame();
        this.setVisible(false);
        lf.setVisible(true);
    }//GEN-LAST:event_btn_logOutActionPerformed

    private void btn_returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_returnBookActionPerformed
        
        PreparedStatement pst;
        DefaultTableModel model = (DefaultTableModel)rentedBookTable.getModel();
        int i = rentedBookTable.getSelectedRow();
        if(i==-1){
            JOptionPane.showMessageDialog(null, "Select the book you wan tto return");
        }
        else{
        String b_no=model.getValueAt(i,0).toString();
        Connection con;
        
        try{
        String q="delete from RentedBooks where b_no = "+b_no;
        con = JavaConnect.ConnectDb();
        pst = con.prepareStatement(q);
        pst.executeUpdate();
        
        pst.close();
        con.close();
        //JOptionPane.showMessageDialog(null, "Delete from rentedBook is done");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Delete error return book "+e);
        } 
        /*
        book deleted from RentedBook table and now updating the books table of
        databse. 
        */
        try{
            String q2="select b.available from Books b where b.b_no="+b_no;
            con = JavaConnect.ConnectDb();
            pst = con.prepareStatement(q2);
            int avl=-1;
            ResultSet rs = pst.executeQuery();
            if(rs.next()){
                avl=rs.getInt("available");
            }
         //   JOptionPane.showMessageDialog(null, "avilable found from books table= "+avl);
            String q="UPDATE Books set available=? where b_no="+b_no;
            rs.close();
            pst.close();
            pst = con.prepareStatement(q);
            pst.setString(1,String.valueOf(avl+1));
            pst.executeUpdate();
            
        //JOptionPane.showMessageDialog(null, "Both pst seted in increase avilablity");
        pst.executeUpdate(); 
        pst.close();
        con.close();
        //JOptionPane.showMessageDialog(null, "Increase in book table is done");
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "increase error in Books "+e);
        }
        this.showRentedBooks();
        this.showAvailableBooks();
        }
    }//GEN-LAST:event_btn_returnBookActionPerformed

    private void rentedBookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rentedBookTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_rentedBookTableMouseClicked

    private void tableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tableMousePressed

    private void showRentedBooks() {
       
        ArrayList<RentBook> list=new ArrayList<>();
        /*
        the list array variable will hold all the value avilable in "Books" table.
        */
        try{
            Connection con=JavaConnect.ConnectDb();
            
            String query="select b.b_no, b.b_Name\n" +
                        "from Books b join RentedBooks rb on b.b_no = rb.b_no\n" +
                        "where rb.Id ="+this.s_id; // + this.s_id;
            
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(query);
            RentBook book;
            while(rs.next()){
             //   JOptionPane.showMessageDialog(null, "No= "+rs.getInt("b_no")+"Name= "+rs.getString("b_name"));
                book = new RentBook(rs.getInt("b_no"), rs.getString("b_name"));
                list.add(book); 
            }
            //Added all data to List array
            //now addnig to table
        
            DefaultTableModel model = (DefaultTableModel)rentedBookTable.getModel();
            model.setRowCount(0);
            Object[] row = new Object[2];
            for(int i=0; i<list.size(); i++){
                row[0]=list.get(i).get_bno();
                row[1]=list.get(i).get_bname();
                model.addRow(row);
                //JOptionPane.showMessageDialog(null, "Addin in table, No= "+list.get(i).get_bno()+" Name= "+list.get(i).get_bname());
            }
            
            rs.close();
            st.close();
            con.close();
          }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "show Rented Books functions "+e);
        }
        JOptionPane.showMessageDialog(null, "RentedBookTable updated ");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Students().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_logOut;
    private javax.swing.JButton btn_rentBook;
    private javax.swing.JButton btn_returnBook;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_sname;
    private javax.swing.JTable rentedBookTable;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables


}
